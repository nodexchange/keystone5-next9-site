{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wojtalam\\\\Workspace\\\\Github\\\\arc-keystone5\\\\site\\\\components\\\\auth\\\\signup.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/** @jsx jsx */\nimport { useState, useEffect } from 'react';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport { jsx } from '@emotion/core';\nimport { useAuth } from '../../lib/authetication';\nimport { Button, Field, Label, Input } from '../../primitives/forms';\nimport { gridSize, colors } from '../../theme';\nimport { CREATE_USER } from '../../graphql/users';\n\nconst onChange = handler => e => handler(e.target.value);\n\nexport default (() => {\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: errorState,\n    1: setErrorState\n  } = useState(false);\n  const {\n    isAuthenticated,\n    signin\n  } = useAuth();\n\n  const handleSubmit = createUser => event => {\n    event.preventDefault();\n    createUser({\n      variables: {\n        name,\n        email,\n        password\n      }\n    });\n  };\n\n  const handleSignin = async () => {\n    setIsLoading(true);\n\n    try {\n      await signin({\n        email,\n        password\n      });\n      setIsLoading(false);\n      setErrorState(false);\n    } catch (error) {\n      setErrorState(true);\n    }\n  }; // if the user is logged in, redirect to the homepage\n\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      Router.push('/');\n    }\n  }, [isAuthenticated]);\n  return jsx(Mutation, {\n    mutation: CREATE_USER,\n    onCompleted: () => {\n      handleSignin();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, (createUser, {\n    error: mutationError\n  }) => {\n    return jsx(React.Fragment, null, mutationError && jsx(\"p\", {\n      css: {\n        color: colors.red\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"The email provided is already in use.\"), errorState && jsx(\"p\", {\n      css: {\n        color: colors.red\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"An unknown error has occured\"), jsx(\"form\", {\n      css: {\n        marginTop: gridSize * 3\n      },\n      noValidate: true,\n      onSubmit: handleSubmit(createUser),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, jsx(Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, jsx(Label, {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Name\"), jsx(Input, {\n      autoComplete: \"name\",\n      autoFocus: true,\n      disabled: isLoading || isAuthenticated,\n      id: \"name\",\n      onChange: onChange(setName),\n      placeholder: \"full name\",\n      required: true,\n      type: \"text\",\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), jsx(Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, jsx(Label, {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Email\"), jsx(Input, {\n      autoComplete: \"email\",\n      disabled: isLoading || isAuthenticated,\n      id: \"email\",\n      onChange: onChange(setEmail),\n      placeholder: \"you@awesome.com\",\n      required: true,\n      type: \"text\",\n      value: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), jsx(Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, jsx(Label, {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Password\"), jsx(Input, {\n      autoComplete: \"password\",\n      disabled: isLoading || isAuthenticated,\n      id: \"password\",\n      minLength: \"8\",\n      onChange: onChange(setPassword),\n      placeholder: \"supersecret\",\n      required: true,\n      type: \"password\",\n      value: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), isLoading ? jsx(Button, {\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Creating account...\") : jsx(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Sign up\")));\n  });\n});","map":{"version":3,"sources":["C:/Users/wojtalam/Workspace/Github/arc-keystone5/site/components/auth/signup.js"],"names":["useState","useEffect","Mutation","Router","jsx","useAuth","Button","Field","Label","Input","gridSize","colors","CREATE_USER","onChange","handler","e","target","value","name","setName","email","setEmail","password","setPassword","isLoading","setIsLoading","errorState","setErrorState","isAuthenticated","signin","handleSubmit","createUser","event","preventDefault","variables","handleSignin","error","push","mutationError","color","red","marginTop"],"mappings":"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","sourcesContent":["/** @jsx jsx */\n\nimport { useState, useEffect } from 'react';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport { jsx } from '@emotion/core';\n\nimport { useAuth } from '../../lib/authetication';\nimport { Button, Field, Label, Input } from '../../primitives/forms';\nimport { gridSize, colors } from '../../theme';\nimport { CREATE_USER } from '../../graphql/users';\n\nconst onChange = handler => e => handler(e.target.value);\n\nexport default () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorState, setErrorState] = useState(false);\n  const { isAuthenticated, signin } = useAuth();\n\n  const handleSubmit = createUser => event => {\n    event.preventDefault();\n    createUser({ variables: { name, email, password } });\n  };\n\n  const handleSignin = async () => {\n    setIsLoading(true);\n    try {\n      await signin({ email, password });\n      setIsLoading(false);\n      setErrorState(false);\n    } catch (error) {\n      setErrorState(true);\n    }\n  };\n\n  // if the user is logged in, redirect to the homepage\n  useEffect(() => {\n    if (isAuthenticated) {\n      Router.push('/');\n    }\n  }, [isAuthenticated]);\n\n  return (\n    <Mutation\n      mutation={CREATE_USER}\n      onCompleted={() => {\n        handleSignin();\n      }}\n    >\n      {(createUser, { error: mutationError }) => {\n        return (\n          <>\n            {mutationError && (\n              <p css={{ color: colors.red }}>The email provided is already in use.</p>\n            )}\n            {errorState && <p css={{ color: colors.red }}>An unknown error has occured</p>}\n\n            <form css={{ marginTop: gridSize * 3 }} noValidate onSubmit={handleSubmit(createUser)}>\n              <Field>\n                <Label htmlFor=\"name\">Name</Label>\n                <Input\n                  autoComplete=\"name\"\n                  autoFocus\n                  disabled={isLoading || isAuthenticated}\n                  id=\"name\"\n                  onChange={onChange(setName)}\n                  placeholder=\"full name\"\n                  required\n                  type=\"text\"\n                  value={name}\n                />\n              </Field>\n              <Field>\n                <Label htmlFor=\"email\">Email</Label>\n                <Input\n                  autoComplete=\"email\"\n                  disabled={isLoading || isAuthenticated}\n                  id=\"email\"\n                  onChange={onChange(setEmail)}\n                  placeholder=\"you@awesome.com\"\n                  required\n                  type=\"text\"\n                  value={email}\n                />\n              </Field>\n              <Field>\n                <Label htmlFor=\"password\">Password</Label>\n                <Input\n                  autoComplete=\"password\"\n                  disabled={isLoading || isAuthenticated}\n                  id=\"password\"\n                  minLength=\"8\"\n                  onChange={onChange(setPassword)}\n                  placeholder=\"supersecret\"\n                  required\n                  type=\"password\"\n                  value={password}\n                />\n              </Field>\n\n              {isLoading ? (\n                <Button disabled>Creating account...</Button>\n              ) : (\n                <Button type=\"submit\">Sign up</Button>\n              )}\n            </form>\n          </>\n        );\n      }}\n    </Mutation>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}