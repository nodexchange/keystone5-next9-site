{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\wojtalam\\\\Workspace\\\\Github\\\\arc-keystone5\\\\site\\\\components\\\\Talks.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { H3, Html, AvatarStack } from '../primitives';\nimport { mq } from '../helpers/media';\nimport { colors } from '../theme';\n\nconst Talks = ({\n  talks\n}) => {\n  return jsx(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, talks.map(talk => {\n    const hasSpeakers = Boolean(talk.speakers && talk.speakers.length);\n    return jsx(Talk, {\n      key: talk.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, jsx(\"div\", {\n      css: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, hasSpeakers && jsx(AvatarStack, {\n      users: talk.speakers,\n      size: \"large\",\n      css: {\n        flexShrink: 0,\n        marginRight: CONTENT_GUTTER\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), jsx(\"div\", {\n      css: {\n        position: 'relative'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, talk.isLightningTalk && jsx(Bolt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"\\u26A1\\uFE0F Lightning Talk \\u26A1\\uFE0F\"), jsx(H3, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, talk.name))), jsx(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, jsx(Html, {\n      markup: talk.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), hasSpeakers && jsx(Byline, {\n      speakers: talk.speakers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })));\n  }));\n};\n\nexport default Talks; // ==============================\n// Styled Components\n// ==============================\n\nconst CONTENT_GUTTER = 12;\n\nconst Wrapper = props => jsx(\"div\", _extends({\n  css: mq({\n    display: ['block', 'flex'],\n    flexWrap: 'wrap',\n    marginLeft: '-1em',\n    marginRight: '-1em'\n  })\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}));\n\nconst Talk = props => jsx(\"div\", _extends({\n  css: {\n    flex: 1,\n    display: 'flex',\n    marginTop: '1em',\n    marginLeft: '1em',\n    marginRight: '1em',\n    flexDirection: 'column',\n    minWidth: 320\n  }\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}));\n\nconst Content = props => jsx(\"div\", _extends({\n  css: {\n    flex: 1,\n    position: 'relative'\n  }\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}));\n\nconst Bolt = props => jsx(\"div\", _extends({\n  css: {\n    color: colors.greyMedium,\n    fontSize: '0.75rem',\n    fontWeight: 500,\n    textTransform: 'uppercase'\n  }\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}));\n\nconst Byline = (_ref) => {\n  let {\n    speakers\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"speakers\"]);\n\n  return jsx(\"div\", _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), \"by\", ' ', speakers.map((speaker, idx) => {\n    let separator;\n    if (idx) separator = ', ';\n    if (idx + 1 === speakers.length && speakers.length !== 1) separator = ' and ';\n    return jsx(\"span\", {\n      key: speaker.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, separator, speaker.name);\n  }));\n};","map":{"version":3,"sources":["C:/Users/wojtalam/Workspace/Github/arc-keystone5/site/components/Talks.js"],"names":["jsx","H3","Html","AvatarStack","mq","colors","Talks","talks","map","talk","hasSpeakers","Boolean","speakers","length","id","display","alignItems","flexShrink","marginRight","CONTENT_GUTTER","position","isLightningTalk","name","description","Wrapper","props","flexWrap","marginLeft","Talk","flex","marginTop","flexDirection","minWidth","Content","Bolt","color","greyMedium","fontSize","fontWeight","textTransform","Byline","speaker","idx","separator"],"mappings":";;;;;;AAAA;AACA,SAASA,GAAT,QAAoB,eAApB;AAEA,SAASC,EAAT,EAAaC,IAAb,EAAmBC,WAAnB,QAAsC,eAAtC;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,MAAT,QAAuB,UAAvB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC3B,SACE,IAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI;AACjB,UAAMC,WAAW,GAAGC,OAAO,CAACF,IAAI,CAACG,QAAL,IAAiBH,IAAI,CAACG,QAAL,CAAcC,MAAhC,CAA3B;AAEA,WACE,IAAC,IAAD;AAAM,MAAA,GAAG,EAAEJ,IAAI,CAACK,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAE;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,UAAU,EAAE;AAA/B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,WAAW,IACV,IAAC,WAAD;AACE,MAAA,KAAK,EAAED,IAAI,CAACG,QADd;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,GAAG,EAAE;AACHK,QAAAA,UAAU,EAAE,CADT;AAEHC,QAAAA,WAAW,EAAEC;AAFV,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAWE;AAAK,MAAA,GAAG,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,IAAI,CAACY,eAAL,IAAwB,IAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAD3B,EAEE,IAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKZ,IAAI,CAACa,IAAV,CAFF,CAXF,CADF,EAiBE,IAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,IAAC,IAAD;AAAM,MAAA,MAAM,EAAEb,IAAI,CAACc,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGb,WAAW,IAAI,IAAC,MAAD;AAAQ,MAAA,QAAQ,EAAED,IAAI,CAACG,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFlB,CAjBF,CADF;AAwBD,GA3BA,CADH,CADF;AAgCD,CAjCD;;AAmCA,eAAeN,KAAf,C,CAEA;AACA;AACA;;AAEA,MAAMa,cAAc,GAAG,EAAvB;;AAEA,MAAMK,OAAO,GAAGC,KAAK,IACnB;AACE,EAAA,GAAG,EAAErB,EAAE,CAAC;AACNW,IAAAA,OAAO,EAAE,CAAC,OAAD,EAAU,MAAV,CADH;AAENW,IAAAA,QAAQ,EAAE,MAFJ;AAGNC,IAAAA,UAAU,EAAE,MAHN;AAINT,IAAAA,WAAW,EAAE;AAJP,GAAD;AADT,GAOMO,KAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAWA,MAAMG,IAAI,GAAGH,KAAK,IAChB;AACE,EAAA,GAAG,EAAE;AACHI,IAAAA,IAAI,EAAE,CADH;AAEHd,IAAAA,OAAO,EAAE,MAFN;AAGHe,IAAAA,SAAS,EAAE,KAHR;AAIHH,IAAAA,UAAU,EAAE,KAJT;AAKHT,IAAAA,WAAW,EAAE,KALV;AAMHa,IAAAA,aAAa,EAAE,QANZ;AAOHC,IAAAA,QAAQ,EAAE;AAPP;AADP,GAUMP,KAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAcA,MAAMQ,OAAO,GAAGR,KAAK,IACnB;AACE,EAAA,GAAG,EAAE;AACHI,IAAAA,IAAI,EAAE,CADH;AAEHT,IAAAA,QAAQ,EAAE;AAFP;AADP,GAKMK,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AASA,MAAMS,IAAI,GAAGT,KAAK,IAChB;AACE,EAAA,GAAG,EAAE;AACHU,IAAAA,KAAK,EAAE9B,MAAM,CAAC+B,UADX;AAEHC,IAAAA,QAAQ,EAAE,SAFP;AAGHC,IAAAA,UAAU,EAAE,GAHT;AAIHC,IAAAA,aAAa,EAAE;AAJZ;AADP,GAOMd,KAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAWA,MAAMe,MAAM,GAAG;AAAA,MAAC;AAAE5B,IAAAA;AAAF,GAAD;AAAA,MAAgBa,KAAhB;;AAAA,SACb,wBAASA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACK,GADL,EAEGb,QAAQ,CAACJ,GAAT,CAAa,CAACiC,OAAD,EAAUC,GAAV,KAAkB;AAC9B,QAAIC,SAAJ;AACA,QAAID,GAAJ,EAASC,SAAS,GAAG,IAAZ;AACT,QAAID,GAAG,GAAG,CAAN,KAAY9B,QAAQ,CAACC,MAArB,IAA+BD,QAAQ,CAACC,MAAT,KAAoB,CAAvD,EAA0D8B,SAAS,GAAG,OAAZ;AAE1D,WACE;AAAM,MAAA,GAAG,EAAEF,OAAO,CAAC3B,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG6B,SADH,EAEGF,OAAO,CAACnB,IAFX,CADF;AAMD,GAXA,CAFH,CADa;AAAA,CAAf","sourcesContent":["/** @jsx jsx */\nimport { jsx } from '@emotion/core';\n\nimport { H3, Html, AvatarStack } from '../primitives';\nimport { mq } from '../helpers/media';\nimport { colors } from '../theme';\n\nconst Talks = ({ talks }) => {\n  return (\n    <Wrapper>\n      {talks.map(talk => {\n        const hasSpeakers = Boolean(talk.speakers && talk.speakers.length);\n\n        return (\n          <Talk key={talk.id}>\n            <div css={{ display: 'flex', alignItems: 'center' }}>\n              {hasSpeakers && (\n                <AvatarStack\n                  users={talk.speakers}\n                  size=\"large\"\n                  css={{\n                    flexShrink: 0,\n                    marginRight: CONTENT_GUTTER,\n                  }}\n                />\n              )}\n              <div css={{ position: 'relative' }}>\n                {talk.isLightningTalk && <Bolt>⚡️ Lightning Talk ⚡️</Bolt>}\n                <H3>{talk.name}</H3>\n              </div>\n            </div>\n            <Content>\n              <Html markup={talk.description} />\n              {hasSpeakers && <Byline speakers={talk.speakers} />}\n            </Content>\n          </Talk>\n        );\n      })}\n    </Wrapper>\n  );\n};\n\nexport default Talks;\n\n// ==============================\n// Styled Components\n// ==============================\n\nconst CONTENT_GUTTER = 12;\n\nconst Wrapper = props => (\n  <div\n    css={mq({\n      display: ['block', 'flex'],\n      flexWrap: 'wrap',\n      marginLeft: '-1em',\n      marginRight: '-1em',\n    })}\n    {...props}\n  />\n);\nconst Talk = props => (\n  <div\n    css={{\n      flex: 1,\n      display: 'flex',\n      marginTop: '1em',\n      marginLeft: '1em',\n      marginRight: '1em',\n      flexDirection: 'column',\n      minWidth: 320,\n    }}\n    {...props}\n  />\n);\nconst Content = props => (\n  <div\n    css={{\n      flex: 1,\n      position: 'relative',\n    }}\n    {...props}\n  />\n);\nconst Bolt = props => (\n  <div\n    css={{\n      color: colors.greyMedium,\n      fontSize: '0.75rem',\n      fontWeight: 500,\n      textTransform: 'uppercase',\n    }}\n    {...props}\n  />\n);\nconst Byline = ({ speakers, ...props }) => (\n  <div {...props}>\n    by{' '}\n    {speakers.map((speaker, idx) => {\n      let separator;\n      if (idx) separator = ', ';\n      if (idx + 1 === speakers.length && speakers.length !== 1) separator = ' and ';\n\n      return (\n        <span key={speaker.id}>\n          {separator}\n          {speaker.name}\n        </span>\n      );\n    })}\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}