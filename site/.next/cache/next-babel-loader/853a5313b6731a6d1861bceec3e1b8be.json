{"ast":null,"code":"import gql from 'graphql-tag';\nimport { USER_IMAGE } from './fragments';\nexport const EVENT_DATA = gql`\n  fragment EventData on Event {\n    id\n    name\n    startTime\n    locationAddress\n    locationDescription\n    description\n    themeColor\n    maxRsvps\n    talks {\n      id\n      isLightningTalk\n      name\n      description\n      speakers {\n        id\n        name\n        ...UserImage\n      }\n    }\n  }\n  ${USER_IMAGE}\n`;\nexport const GET_CURRENT_EVENTS = gql`\n  query GetCurrentEvents($now: DateTime!) {\n    upcomingEvents: allEvents(\n      where: { startTime_not: null, status: active, startTime_gte: $now }\n      orderBy: \"startTime_DESC\"\n    ) {\n      ...EventData\n    }\n    previousEvents: allEvents(\n      where: { startTime_not: null, status: active, startTime_lte: $now }\n      orderBy: \"startTime_ASC\"\n    ) {\n      ...EventData\n    }\n  }\n  ${EVENT_DATA}\n`;\nexport const GET_ALL_EVENTS = gql`\n  {\n    allEvents(where: { startTime_not: null, status: active }, orderBy: \"startTime_DESC\") {\n      ...EventData\n    }\n  }\n  ${EVENT_DATA}\n`;\nexport const GET_EVENT_DETAILS = gql`\n  query GetEventDetails($event: ID!) {\n    Event(where: { id: $event }) {\n      ...EventData\n    }\n    allRsvps(where: { event: { id: $event }, user_is_null: false }) {\n      id\n      user {\n        id\n        name\n        ...UserImage\n      }\n    }\n  }\n  ${EVENT_DATA}\n  ${USER_IMAGE}\n`;","map":{"version":3,"sources":["C:/Users/wojtalam/Workspace/Github/arc-keystone5/site/graphql/events.js"],"names":["gql","USER_IMAGE","EVENT_DATA","GET_CURRENT_EVENTS","GET_ALL_EVENTS","GET_EVENT_DETAILS"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,OAAO,MAAMC,UAAU,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;;;;IAsB1BC,UAAW;CAtBR;AAyBP,OAAO,MAAME,kBAAkB,GAAGH,GAAI;;;;;;;;;;;;;;;IAelCE,UAAW;CAfR;AAkBP,OAAO,MAAME,cAAc,GAAGJ,GAAI;;;;;;IAM9BE,UAAW;CANR;AASP,OAAO,MAAMG,iBAAiB,GAAGL,GAAI;;;;;;;;;;;;;;IAcjCE,UAAW;IACXD,UAAW;CAfR","sourcesContent":["import gql from 'graphql-tag';\nimport { USER_IMAGE } from './fragments';\n\nexport const EVENT_DATA = gql`\n  fragment EventData on Event {\n    id\n    name\n    startTime\n    locationAddress\n    locationDescription\n    description\n    themeColor\n    maxRsvps\n    talks {\n      id\n      isLightningTalk\n      name\n      description\n      speakers {\n        id\n        name\n        ...UserImage\n      }\n    }\n  }\n  ${USER_IMAGE}\n`;\n\nexport const GET_CURRENT_EVENTS = gql`\n  query GetCurrentEvents($now: DateTime!) {\n    upcomingEvents: allEvents(\n      where: { startTime_not: null, status: active, startTime_gte: $now }\n      orderBy: \"startTime_DESC\"\n    ) {\n      ...EventData\n    }\n    previousEvents: allEvents(\n      where: { startTime_not: null, status: active, startTime_lte: $now }\n      orderBy: \"startTime_ASC\"\n    ) {\n      ...EventData\n    }\n  }\n  ${EVENT_DATA}\n`;\n\nexport const GET_ALL_EVENTS = gql`\n  {\n    allEvents(where: { startTime_not: null, status: active }, orderBy: \"startTime_DESC\") {\n      ...EventData\n    }\n  }\n  ${EVENT_DATA}\n`;\n\nexport const GET_EVENT_DETAILS = gql`\n  query GetEventDetails($event: ID!) {\n    Event(where: { id: $event }) {\n      ...EventData\n    }\n    allRsvps(where: { event: { id: $event }, user_is_null: false }) {\n      id\n      user {\n        id\n        name\n        ...UserImage\n      }\n    }\n  }\n  ${EVENT_DATA}\n  ${USER_IMAGE}\n`;\n"]},"metadata":{},"sourceType":"module"}