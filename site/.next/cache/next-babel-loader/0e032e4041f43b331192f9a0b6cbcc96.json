{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  query GetRsvps($event: ID!, $user: ID!) {\\n    eventRsvps: allRsvps(where: { event: { id: $event }, status: yes }) {\\n      id\\n    }\\n    userRsvps: allRsvps(where: { event: { id: $event }, user: { id: $user } }) {\\n      id\\n      status\\n    }\\n    event: Event(where: { id: $event }) {\\n      id\\n      startTime\\n      maxRsvps\\n      isRsvpAvailable\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query GetEventRsvps($event: ID!) {\\n    allRsvps(where: { event: { id: $event }, status: yes, user_is_null: false }) {\\n      id\\n      status\\n      user {\\n        id\\n        name\\n        ...UserImage\\n      }\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UpdateRSVP($rsvp: ID!, $status: RsvpStatusType!) {\\n    updateRsvp(id: $rsvp, data: { status: $status }) {\\n      id\\n      event {\\n        id\\n      }\\n      status\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation AddRsvp($event: ID!, $user: ID!, $status: RsvpStatusType!) {\\n    createRsvp(\\n      data: {\\n        event: { connect: { id: $event } }\\n        user: { connect: { id: $user } }\\n        status: $status\\n      }\\n    ) {\\n      id\\n      event {\\n        id\\n      }\\n      status\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { USER_IMAGE } from './fragments';\nexport var ADD_RSVP = gql(_templateObject());\nexport var UPDATE_RSVP = gql(_templateObject2());\nexport var GET_EVENT_RSVPS = gql(_templateObject3(), USER_IMAGE);\nexport var GET_RSVPS = gql(_templateObject4());","map":{"version":3,"sources":["C:/Users/wojtalam/Workspace/Github/arc-keystone5/site/graphql/rsvps.js"],"names":["gql","USER_IMAGE","ADD_RSVP","UPDATE_RSVP","GET_EVENT_RSVPS","GET_RSVPS"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,OAAO,IAAMC,QAAQ,GAAGF,GAAH,mBAAd;AAkBP,OAAO,IAAMG,WAAW,GAAGH,GAAH,oBAAjB;AAYP,OAAO,IAAMI,eAAe,GAAGJ,GAAH,qBAYxBC,UAZwB,CAArB;AAeP,OAAO,IAAMI,SAAS,GAAGL,GAAH,oBAAf","sourcesContent":["import gql from 'graphql-tag';\nimport { USER_IMAGE } from './fragments';\n\nexport const ADD_RSVP = gql`\n  mutation AddRsvp($event: ID!, $user: ID!, $status: RsvpStatusType!) {\n    createRsvp(\n      data: {\n        event: { connect: { id: $event } }\n        user: { connect: { id: $user } }\n        status: $status\n      }\n    ) {\n      id\n      event {\n        id\n      }\n      status\n    }\n  }\n`;\n\nexport const UPDATE_RSVP = gql`\n  mutation UpdateRSVP($rsvp: ID!, $status: RsvpStatusType!) {\n    updateRsvp(id: $rsvp, data: { status: $status }) {\n      id\n      event {\n        id\n      }\n      status\n    }\n  }\n`;\n\nexport const GET_EVENT_RSVPS = gql`\n  query GetEventRsvps($event: ID!) {\n    allRsvps(where: { event: { id: $event }, status: yes, user_is_null: false }) {\n      id\n      status\n      user {\n        id\n        name\n        ...UserImage\n      }\n    }\n  }\n  ${USER_IMAGE}\n`;\n\nexport const GET_RSVPS = gql`\n  query GetRsvps($event: ID!, $user: ID!) {\n    eventRsvps: allRsvps(where: { event: { id: $event }, status: yes }) {\n      id\n    }\n    userRsvps: allRsvps(where: { event: { id: $event }, user: { id: $user } }) {\n      id\n      status\n    }\n    event: Event(where: { id: $event }) {\n      id\n      startTime\n      maxRsvps\n      isRsvpAvailable\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}