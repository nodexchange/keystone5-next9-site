{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\wojtalam\\\\Workspace\\\\Github\\\\arc-keystone5\\\\site\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport App, { Container } from 'next/app';\nimport Head from 'next/head';\nimport gql from 'graphql-tag';\nimport { ApolloProvider } from 'react-apollo';\nimport { ToastProvider } from 'react-toast-notifications';\nimport withApollo from '../lib/withApollo';\nimport { AuthProvider } from '../lib/authetication';\nimport StylesBase from '../primitives/StylesBase';\nimport GoogleAnalytics from '../components/GoogleAnalytics';\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n    const data = await ctx.apolloClient.query({\n      query: gql`\n        query {\n          authenticatedUser {\n            id\n            name\n            isAdmin\n          }\n        }\n      `,\n      fetchPolicy: 'network-only'\n    });\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps,\n      user: data.data ? data.data.authenticatedUser : undefined\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      apolloClient,\n      user\n    } = this.props;\n    return __jsx(ToastProvider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(ApolloProvider, {\n      client: apolloClient,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(AuthProvider, {\n      initialUserValue: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(\"link\", {\n      rel: \"shortcut icon\",\n      href: \"/favicon.ico\",\n      type: \"image/x-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), __jsx(StylesBase, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))))), __jsx(GoogleAnalytics, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withApollo(MyApp);","map":{"version":3,"sources":["C:/Users/wojtalam/Workspace/Github/arc-keystone5/site/pages/_app.js"],"names":["React","App","Container","Head","gql","ApolloProvider","ToastProvider","withApollo","AuthProvider","StylesBase","GoogleAnalytics","MyApp","getInitialProps","Component","ctx","pageProps","data","apolloClient","query","fetchPolicy","user","authenticatedUser","undefined","render","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAEA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;;AAEA,MAAMC,KAAN,SAAoBV,GAApB,CAAwB;AACtB,eAAaW,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/C,QAAIC,SAAS,GAAG,EAAhB;AAEA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,YAAJ,CAAiBC,KAAjB,CAAuB;AACxCA,MAAAA,KAAK,EAAEd,GAAI;;;;;;;;OAD6B;AAUxCe,MAAAA,WAAW,EAAE;AAV2B,KAAvB,CAAnB;;AAaA,QAAIN,SAAS,CAACD,eAAd,EAA+B;AAC7BG,MAAAA,SAAS,GAAG,MAAMF,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlB;AACD;;AAED,WAAO;AAAEC,MAAAA,SAAF;AAAaK,MAAAA,IAAI,EAAEJ,IAAI,CAACA,IAAL,GAAYA,IAAI,CAACA,IAAL,CAAUK,iBAAtB,GAA0CC;AAA7D,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,SAAF;AAAaE,MAAAA,SAAb;AAAwBE,MAAAA,YAAxB;AAAsCG,MAAAA;AAAtC,QAA+C,KAAKI,KAA1D;AACA,WACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAEP,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AAAc,MAAA,gBAAgB,EAAEG,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,GAAG,EAAC,eAAV;AAA0B,MAAA,IAAI,EAAC,cAA/B;AAA8C,MAAA,IAAI,EAAC,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,OAAO,EAAC,2EAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAQE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE,MAAC,SAAD,eAAeL,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OATF,CADF,CADF,CADF,EAgBE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CADF;AAoBD;;AA9CqB;;AAiDxB,eAAeR,UAAU,CAACI,KAAD,CAAzB","sourcesContent":["import React from 'react';\nimport App, { Container } from 'next/app';\nimport Head from 'next/head';\nimport gql from 'graphql-tag';\nimport { ApolloProvider } from 'react-apollo';\nimport { ToastProvider } from 'react-toast-notifications';\n\nimport withApollo from '../lib/withApollo';\nimport { AuthProvider } from '../lib/authetication';\nimport StylesBase from '../primitives/StylesBase';\nimport GoogleAnalytics from '../components/GoogleAnalytics';\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {};\n\n    const data = await ctx.apolloClient.query({\n      query: gql`\n        query {\n          authenticatedUser {\n            id\n            name\n            isAdmin\n          }\n        }\n      `,\n      fetchPolicy: 'network-only',\n    });\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return { pageProps, user: data.data ? data.data.authenticatedUser : undefined };\n  }\n\n  render() {\n    const { Component, pageProps, apolloClient, user } = this.props;\n    return (\n      <ToastProvider>\n        <Container>\n          <ApolloProvider client={apolloClient}>\n            <AuthProvider initialUserValue={user}>\n              <Head>\n                <link rel=\"shortcut icon\" href=\"/favicon.ico\" type=\"image/x-icon\" />\n                <meta\n                  name=\"viewport\"\n                  content=\"width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover\"\n                />\n              </Head>\n              <StylesBase />\n              <Component {...pageProps} />\n            </AuthProvider>\n          </ApolloProvider>\n        </Container>\n        <GoogleAnalytics />\n      </ToastProvider>\n    );\n  }\n}\n\nexport default withApollo(MyApp);\n"]},"metadata":{},"sourceType":"module"}