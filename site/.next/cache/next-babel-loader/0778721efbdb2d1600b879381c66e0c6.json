{"ast":null,"code":"import gql from 'graphql-tag';\nimport { USER_IMAGE } from './fragments';\nexport const ADD_RSVP = gql`\n  mutation AddRsvp($event: ID!, $user: ID!, $status: RsvpStatusType!) {\n    createRsvp(\n      data: {\n        event: { connect: { id: $event } }\n        user: { connect: { id: $user } }\n        status: $status\n      }\n    ) {\n      id\n      event {\n        id\n      }\n      status\n    }\n  }\n`;\nexport const UPDATE_RSVP = gql`\n  mutation UpdateRSVP($rsvp: ID!, $status: RsvpStatusType!) {\n    updateRsvp(id: $rsvp, data: { status: $status }) {\n      id\n      event {\n        id\n      }\n      status\n    }\n  }\n`;\nexport const GET_EVENT_RSVPS = gql`\n  query GetEventRsvps($event: ID!) {\n    allRsvps(where: { event: { id: $event }, status: yes, user_is_null: false }) {\n      id\n      status\n      user {\n        id\n        name\n        ...UserImage\n      }\n    }\n  }\n  ${USER_IMAGE}\n`;\nexport const GET_RSVPS = gql`\n  query GetRsvps($event: ID!, $user: ID!) {\n    eventRsvps: allRsvps(where: { event: { id: $event }, status: yes }) {\n      id\n    }\n    userRsvps: allRsvps(where: { event: { id: $event }, user: { id: $user } }) {\n      id\n      status\n    }\n    event: Event(where: { id: $event }) {\n      id\n      startTime\n      maxRsvps\n      isRsvpAvailable\n    }\n  }\n`;","map":{"version":3,"sources":["C:/Users/wojtalam/Workspace/Github/arc-keystone5/site/graphql/rsvps.js"],"names":["gql","USER_IMAGE","ADD_RSVP","UPDATE_RSVP","GET_EVENT_RSVPS","GET_RSVPS"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,OAAO,MAAMC,QAAQ,GAAGF,GAAI;;;;;;;;;;;;;;;;CAArB;AAkBP,OAAO,MAAMG,WAAW,GAAGH,GAAI;;;;;;;;;;CAAxB;AAYP,OAAO,MAAMI,eAAe,GAAGJ,GAAI;;;;;;;;;;;;IAY/BC,UAAW;CAZR;AAeP,OAAO,MAAMI,SAAS,GAAGL,GAAI;;;;;;;;;;;;;;;;CAAtB","sourcesContent":["import gql from 'graphql-tag';\nimport { USER_IMAGE } from './fragments';\n\nexport const ADD_RSVP = gql`\n  mutation AddRsvp($event: ID!, $user: ID!, $status: RsvpStatusType!) {\n    createRsvp(\n      data: {\n        event: { connect: { id: $event } }\n        user: { connect: { id: $user } }\n        status: $status\n      }\n    ) {\n      id\n      event {\n        id\n      }\n      status\n    }\n  }\n`;\n\nexport const UPDATE_RSVP = gql`\n  mutation UpdateRSVP($rsvp: ID!, $status: RsvpStatusType!) {\n    updateRsvp(id: $rsvp, data: { status: $status }) {\n      id\n      event {\n        id\n      }\n      status\n    }\n  }\n`;\n\nexport const GET_EVENT_RSVPS = gql`\n  query GetEventRsvps($event: ID!) {\n    allRsvps(where: { event: { id: $event }, status: yes, user_is_null: false }) {\n      id\n      status\n      user {\n        id\n        name\n        ...UserImage\n      }\n    }\n  }\n  ${USER_IMAGE}\n`;\n\nexport const GET_RSVPS = gql`\n  query GetRsvps($event: ID!, $user: ID!) {\n    eventRsvps: allRsvps(where: { event: { id: $event }, status: yes }) {\n      id\n    }\n    userRsvps: allRsvps(where: { event: { id: $event }, user: { id: $user } }) {\n      id\n      status\n    }\n    event: Event(where: { id: $event }) {\n      id\n      startTime\n      maxRsvps\n      isRsvpAvailable\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}