{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\wojtalam\\\\Workspace\\\\Github\\\\arc-keystone5\\\\site\\\\components\\\\Rsvp.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/** @jsx jsx */\nimport { Mutation, Query } from 'react-apollo';\nimport { jsx } from '@emotion/core';\nimport { Button as ButtonPrimitive, CheckmarkIcon, Loading } from '../primitives';\nimport { useAuth } from '../lib/authetication';\nimport { GET_RSVPS, UPDATE_RSVP, ADD_RSVP } from '../graphql/rsvps';\nimport AuthModal from './auth/modal';\n\nfunction validateRsvp({\n  userRsvps,\n  eventRsvps,\n  event\n}) {\n  if (!event || !event.isRsvpAvailable) {\n    return {\n      okay: false,\n      message: null\n    }; // RSVP is not available\n  }\n\n  if (new Date() > new Date(event.startTime)) {\n    return {\n      okay: false,\n      message: null\n    }; // This event is in the past.\n  }\n\n  if (event.maxRsvps !== null && eventRsvps.length >= event.maxRsvps && !userRsvps.length) {\n    return {\n      okay: false,\n      message: 'Max attendees reached.'\n    };\n  }\n\n  return {\n    okay: true\n  };\n}\n\nconst Rsvp = ({\n  children,\n  event,\n  text,\n  themeColor\n}) => {\n  const {\n    isAuthenticated,\n    isLoading,\n    user\n  } = useAuth();\n  const eventId = event.id;\n  const isPast = new Date() > new Date(event.startTime);\n\n  if (isLoading) {\n    return null;\n  }\n\n  if (!isAuthenticated) {\n    return isPast ? null : children({\n      component: jsx(AuthModal, {\n        mode: \"signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, ({\n        openModal\n      }) => jsx(ButtonWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, jsx(\"span\", {\n        css: {\n          marginRight: '0.5em',\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, text), jsx(Button, {\n        href: \"/signin\",\n        onClick: openModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Sign In\")))\n    });\n  }\n\n  return jsx(Query, {\n    query: GET_RSVPS,\n    variables: {\n      event: eventId,\n      user: user.id\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, ({\n    data,\n    loading: loadingData,\n    error\n  }) => {\n    if (error) {\n      console.error(error);\n      return null;\n    }\n\n    if (loadingData) {\n      return children({\n        component: jsx(ButtonWrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, jsx(\"span\", {\n          css: {\n            marginRight: '0.5em',\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, text), jsx(Loading, {\n          size: \"xsmall\",\n          color: themeColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }))\n      });\n    }\n\n    const {\n      userRsvps,\n      eventRsvps,\n      event\n    } = data;\n    const userResponse = userRsvps && userRsvps[0];\n    const hasResponded = Boolean(userResponse);\n    const {\n      okay,\n      message\n    } = validateRsvp({\n      userRsvps,\n      eventRsvps,\n      event\n    });\n\n    if (!okay) {\n      return children({\n        message\n      });\n    }\n\n    const refetch = () => [{\n      query: GET_RSVPS,\n      variables: {\n        event: eventId,\n        user: user.id\n      }\n    }];\n\n    return jsx(Mutation, {\n      mutation: hasResponded ? UPDATE_RSVP : ADD_RSVP,\n      refetchQueries: refetch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, (updateRsvp, {\n      error: mutationError,\n      loading: mutationLoading\n    }) => {\n      if (mutationError) {\n        return children({\n          message: mutationError.message\n        });\n      }\n\n      const doRespond = status => updateRsvp({\n        variables: {\n          rsvp: hasResponded ? userResponse.id : null,\n          event: eventId,\n          user: user.id,\n          status\n        }\n      });\n\n      const respondYes = () => doRespond('yes');\n\n      const respondNo = () => doRespond('no');\n\n      const isGoing = hasResponded ? userResponse.status === 'yes' : false;\n      return children({\n        component: jsx(ButtonWrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, jsx(\"span\", {\n          css: {\n            marginRight: '0.5em',\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, text), jsx(Button, {\n          disabled: mutationLoading || isGoing,\n          isSelected: hasResponded && isGoing,\n          background: themeColor,\n          onClick: respondYes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"Yes\"), jsx(Button, {\n          disabled: mutationLoading || !isGoing,\n          isSelected: hasResponded && !isGoing,\n          background: themeColor,\n          onClick: respondNo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \"No\"))\n      });\n    });\n  });\n};\n\nRsvp.defaultProps = {\n  children: () => null,\n  text: 'Are you going?'\n};\n\nconst ButtonWrapper = props => jsx(\"div\", _extends({\n  css: {\n    alignItems: 'center',\n    display: 'flex',\n    flex: 1,\n    minHeight: 40 // NOTE: stop jumping around when no buttons\n\n  }\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147\n  },\n  __self: this\n}));\n\nconst Button = (_ref) => {\n  let {\n    background,\n    children,\n    isSelected\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"background\", \"children\", \"isSelected\"]);\n\n  return jsx(ButtonPrimitive, _extends({\n    css: {\n      boxSizing: 'border-box',\n      marginLeft: '0.25em',\n      minWidth: 92\n    },\n    background: isSelected ? background : null,\n    outline: !isSelected,\n    size: \"small\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), isSelected ? jsx(CheckmarkIcon, {\n    size: 16,\n    stroke: 3,\n    css: {\n      marginRight: '0.25rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }) : null, children);\n};\n\nexport default Rsvp;","map":{"version":3,"sources":["C:/Users/wojtalam/Workspace/Github/arc-keystone5/site/components/Rsvp.js"],"names":["Mutation","Query","jsx","Button","ButtonPrimitive","CheckmarkIcon","Loading","useAuth","GET_RSVPS","UPDATE_RSVP","ADD_RSVP","AuthModal","validateRsvp","userRsvps","eventRsvps","event","isRsvpAvailable","okay","message","Date","startTime","maxRsvps","length","Rsvp","children","text","themeColor","isAuthenticated","isLoading","user","eventId","id","isPast","component","openModal","marginRight","flex","data","loading","loadingData","error","console","userResponse","hasResponded","Boolean","refetch","query","variables","updateRsvp","mutationError","mutationLoading","doRespond","status","rsvp","respondYes","respondNo","isGoing","defaultProps","ButtonWrapper","props","alignItems","display","minHeight","background","isSelected","boxSizing","marginLeft","minWidth"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { Mutation, Query } from 'react-apollo';\nimport { jsx } from '@emotion/core';\n\nimport { Button as ButtonPrimitive, CheckmarkIcon, Loading } from '../primitives';\nimport { useAuth } from '../lib/authetication';\nimport { GET_RSVPS, UPDATE_RSVP, ADD_RSVP } from '../graphql/rsvps';\nimport AuthModal from './auth/modal';\n\nfunction validateRsvp({ userRsvps, eventRsvps, event }) {\n  if (!event || !event.isRsvpAvailable) {\n    return { okay: false, message: null }; // RSVP is not available\n  }\n\n  if (new Date() > new Date(event.startTime)) {\n    return { okay: false, message: null }; // This event is in the past.\n  }\n\n  if (event.maxRsvps !== null && eventRsvps.length >= event.maxRsvps && !userRsvps.length) {\n    return { okay: false, message: 'Max attendees reached.' };\n  }\n\n  return { okay: true };\n}\n\nconst Rsvp = ({ children, event, text, themeColor }) => {\n  const { isAuthenticated, isLoading, user } = useAuth();\n  const eventId = event.id;\n  const isPast = new Date() > new Date(event.startTime);\n\n  if (isLoading) {\n    return null;\n  }\n\n  if (!isAuthenticated) {\n    return isPast\n      ? null\n      : children({\n          component: (\n            <AuthModal mode=\"signin\">\n              {({ openModal }) => (\n                <ButtonWrapper>\n                  <span css={{ marginRight: '0.5em', flex: 1 }}>{text}</span>\n                  <Button href=\"/signin\" onClick={openModal}>\n                    Sign In\n                  </Button>\n                </ButtonWrapper>\n              )}\n            </AuthModal>\n          ),\n        });\n  }\n\n  return (\n    <Query query={GET_RSVPS} variables={{ event: eventId, user: user.id }}>\n      {({ data, loading: loadingData, error }) => {\n        if (error) {\n          console.error(error);\n          return null;\n        }\n\n        if (loadingData) {\n          return children({\n            component: (\n              <ButtonWrapper>\n                <span css={{ marginRight: '0.5em', flex: 1 }}>{text}</span>\n                <Loading size=\"xsmall\" color={themeColor} />\n              </ButtonWrapper>\n            ),\n          });\n        }\n\n        const { userRsvps, eventRsvps, event } = data;\n        const userResponse = userRsvps && userRsvps[0];\n        const hasResponded = Boolean(userResponse);\n        const { okay, message } = validateRsvp({ userRsvps, eventRsvps, event });\n\n        if (!okay) {\n          return children({ message });\n        }\n\n        const refetch = () => [\n          {\n            query: GET_RSVPS,\n            variables: { event: eventId, user: user.id },\n          },\n        ];\n\n        return (\n          <Mutation mutation={hasResponded ? UPDATE_RSVP : ADD_RSVP} refetchQueries={refetch}>\n            {(updateRsvp, { error: mutationError, loading: mutationLoading }) => {\n              if (mutationError) {\n                return children({ message: mutationError.message });\n              }\n\n              const doRespond = status =>\n                updateRsvp({\n                  variables: {\n                    rsvp: hasResponded ? userResponse.id : null,\n                    event: eventId,\n                    user: user.id,\n                    status,\n                  },\n                });\n              const respondYes = () => doRespond('yes');\n              const respondNo = () => doRespond('no');\n\n              const isGoing = hasResponded ? userResponse.status === 'yes' : false;\n\n              return children({\n                component: (\n                  <ButtonWrapper>\n                    <span css={{ marginRight: '0.5em', flex: 1 }}>{text}</span>\n                    <Button\n                      disabled={mutationLoading || isGoing}\n                      isSelected={hasResponded && isGoing}\n                      background={themeColor}\n                      onClick={respondYes}\n                    >\n                      Yes\n                    </Button>\n                    <Button\n                      disabled={mutationLoading || !isGoing}\n                      isSelected={hasResponded && !isGoing}\n                      background={themeColor}\n                      onClick={respondNo}\n                    >\n                      No\n                    </Button>\n                  </ButtonWrapper>\n                ),\n              });\n            }}\n          </Mutation>\n        );\n      }}\n    </Query>\n  );\n};\n\nRsvp.defaultProps = {\n  children: () => null,\n  text: 'Are you going?',\n};\n\nconst ButtonWrapper = props => (\n  <div\n    css={{\n      alignItems: 'center',\n      display: 'flex',\n      flex: 1,\n      minHeight: 40, // NOTE: stop jumping around when no buttons\n    }}\n    {...props}\n  />\n);\n\nconst Button = ({ background, children, isSelected, ...props }) => (\n  <ButtonPrimitive\n    css={{\n      boxSizing: 'border-box',\n      marginLeft: '0.25em',\n      minWidth: 92,\n    }}\n    background={isSelected ? background : null}\n    outline={!isSelected}\n    size=\"small\"\n    {...props}\n  >\n    {isSelected ? <CheckmarkIcon size={16} stroke={3} css={{ marginRight: '0.25rem' }} /> : null}\n    {children}\n  </ButtonPrimitive>\n);\n\nexport default Rsvp;\n"]},"metadata":{},"sourceType":"module"}