{"ast":null,"code":"import { useEffect } from 'react';\nimport { format, isFuture } from 'date-fns';\nimport getConfig from 'next/config';\nimport contrast from 'get-contrast';\nimport { colors } from '../theme';\nconst {\n  publicRuntimeConfig: {\n    meetup\n  }\n} = getConfig(); // Check if date is in future or past\n\nexport const isInFuture = date => isFuture(date); // Pretty date formatting\n\nexport const formatFutureDate = date => format(date, 'ddd D MMM, h:mm A');\nexport const formatPastDate = date => format(date, 'MMM YYYY'); // Singular / Plural\n\nexport const pluralLabel = (num, single, plural) => {\n  return num === 1 ? `${num} ${single}` : `${num} ${plural}`;\n}; // Get A11Y contrast-compliant foreground color from background color\n\nexport const getForegroundColor = backgroundColor => {\n  const darkFgScore = contrast.ratio(colors.greyDark, backgroundColor);\n  const lightFgScore = contrast.ratio('white', backgroundColor);\n  return darkFgScore - lightFgScore > 1 ? colors.greyDark : 'white';\n}; // ==============================\n// Hooks\n// ==============================\n// Logo dimensions\n\nexport const useLogoDimension = () => {\n  const logoWidth = meetup.logo.width;\n  const logoHeight = meetup.logo.height;\n  const logoWidthSm = logoWidth / 1.5;\n  const logoHeightSm = logoHeight / 1.5;\n  return {\n    logoWidth,\n    logoHeight,\n    logoWidthSm,\n    logoHeightSm\n  };\n}; // Key handling\n\nexport function useKeydown(key, callback) {\n  useEffect(() => {\n    const handler = function (event) {\n      if (event.key === key) {\n        callback();\n      }\n    };\n\n    document.addEventListener('keydown', handler);\n    return () => {\n      document.removeEventListener('keydown', handler);\n    };\n  }, []);\n} // Strip Tags\n\nexport const stripTags = htmlString => {\n  return (htmlString || '').replace(/(<([^>]+)>)/gi, '');\n};","map":{"version":3,"sources":["C:/Users/wojtalam/Workspace/Github/arc-keystone5/site/helpers/index.js"],"names":["useEffect","format","isFuture","getConfig","contrast","colors","publicRuntimeConfig","meetup","isInFuture","date","formatFutureDate","formatPastDate","pluralLabel","num","single","plural","getForegroundColor","backgroundColor","darkFgScore","ratio","greyDark","lightFgScore","useLogoDimension","logoWidth","logo","width","logoHeight","height","logoWidthSm","logoHeightSm","useKeydown","key","callback","handler","event","document","addEventListener","removeEventListener","stripTags","htmlString","replace"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,cAArB;AAEA,SAASC,MAAT,QAAuB,UAAvB;AAEA,MAAM;AACJC,EAAAA,mBAAmB,EAAE;AAAEC,IAAAA;AAAF;AADjB,IAEFJ,SAAS,EAFb,C,CAIA;;AACA,OAAO,MAAMK,UAAU,GAAGC,IAAI,IAAIP,QAAQ,CAACO,IAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMC,gBAAgB,GAAGD,IAAI,IAAIR,MAAM,CAACQ,IAAD,EAAO,mBAAP,CAAvC;AACP,OAAO,MAAME,cAAc,GAAGF,IAAI,IAAIR,MAAM,CAACQ,IAAD,EAAO,UAAP,CAArC,C,CAEP;;AACA,OAAO,MAAMG,WAAW,GAAG,CAACC,GAAD,EAAMC,MAAN,EAAcC,MAAd,KAAyB;AAClD,SAAOF,GAAG,KAAK,CAAR,GAAa,GAAEA,GAAI,IAAGC,MAAO,EAA7B,GAAkC,GAAED,GAAI,IAAGE,MAAO,EAAzD;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAMC,kBAAkB,GAAGC,eAAe,IAAI;AACnD,QAAMC,WAAW,GAAGd,QAAQ,CAACe,KAAT,CAAed,MAAM,CAACe,QAAtB,EAAgCH,eAAhC,CAApB;AACA,QAAMI,YAAY,GAAGjB,QAAQ,CAACe,KAAT,CAAe,OAAf,EAAwBF,eAAxB,CAArB;AAEA,SAAOC,WAAW,GAAGG,YAAd,GAA6B,CAA7B,GAAiChB,MAAM,CAACe,QAAxC,GAAmD,OAA1D;AACD,CALM,C,CAOP;AACA;AACA;AAEA;;AACA,OAAO,MAAME,gBAAgB,GAAG,MAAM;AACpC,QAAMC,SAAS,GAAGhB,MAAM,CAACiB,IAAP,CAAYC,KAA9B;AACA,QAAMC,UAAU,GAAGnB,MAAM,CAACiB,IAAP,CAAYG,MAA/B;AACA,QAAMC,WAAW,GAAGL,SAAS,GAAG,GAAhC;AACA,QAAMM,YAAY,GAAGH,UAAU,GAAG,GAAlC;AAEA,SAAO;AAAEH,IAAAA,SAAF;AAAaG,IAAAA,UAAb;AAAyBE,IAAAA,WAAzB;AAAsCC,IAAAA;AAAtC,GAAP;AACD,CAPM,C,CASP;;AACA,OAAO,SAASC,UAAT,CAAoBC,GAApB,EAAyBC,QAAzB,EAAmC;AACxChC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiC,OAAO,GAAG,UAASC,KAAT,EAAgB;AAC9B,UAAIA,KAAK,CAACH,GAAN,KAAcA,GAAlB,EAAuB;AACrBC,QAAAA,QAAQ;AACT;AACF,KAJD;;AAKAG,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCH,OAArC;AACA,WAAO,MAAM;AACXE,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCJ,OAAxC;AACD,KAFD;AAGD,GAVQ,EAUN,EAVM,CAAT;AAWD,C,CAED;;AACA,OAAO,MAAMK,SAAS,GAAGC,UAAU,IAAI;AACrC,SAAO,CAACA,UAAU,IAAI,EAAf,EAAmBC,OAAnB,CAA2B,eAA3B,EAA4C,EAA5C,CAAP;AACD,CAFM","sourcesContent":["import { useEffect } from 'react';\nimport { format, isFuture } from 'date-fns';\nimport getConfig from 'next/config';\nimport contrast from 'get-contrast';\n\nimport { colors } from '../theme';\n\nconst {\n  publicRuntimeConfig: { meetup },\n} = getConfig();\n\n// Check if date is in future or past\nexport const isInFuture = date => isFuture(date);\n\n// Pretty date formatting\nexport const formatFutureDate = date => format(date, 'ddd D MMM, h:mm A');\nexport const formatPastDate = date => format(date, 'MMM YYYY');\n\n// Singular / Plural\nexport const pluralLabel = (num, single, plural) => {\n  return num === 1 ? `${num} ${single}` : `${num} ${plural}`;\n};\n\n// Get A11Y contrast-compliant foreground color from background color\nexport const getForegroundColor = backgroundColor => {\n  const darkFgScore = contrast.ratio(colors.greyDark, backgroundColor);\n  const lightFgScore = contrast.ratio('white', backgroundColor);\n\n  return darkFgScore - lightFgScore > 1 ? colors.greyDark : 'white';\n};\n\n// ==============================\n// Hooks\n// ==============================\n\n// Logo dimensions\nexport const useLogoDimension = () => {\n  const logoWidth = meetup.logo.width;\n  const logoHeight = meetup.logo.height;\n  const logoWidthSm = logoWidth / 1.5;\n  const logoHeightSm = logoHeight / 1.5;\n\n  return { logoWidth, logoHeight, logoWidthSm, logoHeightSm };\n};\n\n// Key handling\nexport function useKeydown(key, callback) {\n  useEffect(() => {\n    const handler = function(event) {\n      if (event.key === key) {\n        callback();\n      }\n    };\n    document.addEventListener('keydown', handler);\n    return () => {\n      document.removeEventListener('keydown', handler);\n    };\n  }, []);\n}\n\n// Strip Tags\nexport const stripTags = htmlString => {\n  return (htmlString || '').replace(/(<([^>]+)>)/gi, '');\n};\n"]},"metadata":{},"sourceType":"module"}